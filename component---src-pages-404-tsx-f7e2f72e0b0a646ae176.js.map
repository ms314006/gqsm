{"version":3,"sources":["webpack:///./src/pages/404.tsx","webpack:///./src/styles/colors.ts","webpack:///./src/website-config.ts","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/styles/shared.ts","webpack:///./src/components/Wrapper.tsx","webpack:///./src/layouts/index.tsx","webpack:///./src/components/PostCard.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header/SiteNavLogo.tsx","webpack:///./src/favicon.ico"],"names":["SiteNavCenter","Object","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_1__","target","name","styles","ErrorTemplate","ErrorCode","ErrorDescription","colors","midgrey","ErrorLink","NotFoundPage","props","edges","data","allMarkdownRemark","_emotion_core__WEBPACK_IMPORTED_MODULE_4__","_layouts__WEBPACK_IMPORTED_MODULE_8__","_components_Wrapper__WEBPACK_IMPORTED_MODULE_7__","css","_emotion_css__WEBPACK_IMPORTED_MODULE_0__","SiteHeader","outer","className","_components_header_SiteNavLogo__WEBPACK_IMPORTED_MODULE_5__","id","inner","style","textAlign","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","PostFeed","map","_ref","node","_components_PostCard__WEBPACK_IMPORTED_MODULE_6__","key","fields","slug","post","pageQuery","__webpack_require__","d","__webpack_exports__","blue","green","purple","yellow","red","darkgrey","lightgrey","whitegrey","pink","brown","config","title","mainTitle","description","coverImage","logo","lang","siteUrl","facebook","twitter","linkedin","github","showSubscribe","mailchimpAction","mailchimpName","mailchimpEmailFieldName","googleSiteVerification","footer","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","a","_loader__WEBPACK_IMPORTED_MODULE_3__","StaticQueryContext","loader","enqueue","React","createContext","StaticQueryDataRenderer","staticQueryData","query","render","finalData","Fragment","children","Consumer","blackMask","SiteMain","SiteTitle","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","SiteDescription","PostFeedRaise","SocialLink","darken","SiteHeaderContent","AuthorProfileImage","lighten","StyledWrapper","Wrapper","_emotion_core__WEBPACK_IMPORTED_MODULE_2__","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","polished__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_3__","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","_styles_colors__WEBPACK_IMPORTED_MODULE_4__","_src_favicon_ico__WEBPACK_IMPORTED_MODULE_5__","_src_favicon_ico__WEBPACK_IMPORTED_MODULE_5___default","GlobalStyles","IndexLayout","rel","href","favicon","type","PostCardStyles","PostCardImageLink","PostCardImage","PostCardContent","PostCardContentLink","PostCardTags","PostCardTitle","PostCardExcerpt","PostCardMeta","ReadingTime","PostCard","frontmatter","image","gatsby__WEBPACK_IMPORTED_MODULE_1__","childImageSharp","fluid","gatsby_image__WEBPACK_IMPORTED_MODULE_2___default","alt","height","tags","excerpt","timeToRead","m","module","exports","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","assign","json","SiteNavLogoStyles","SiteNavLogo","src","fixed","_public_static_d_1920840834_json__WEBPACK_IMPORTED_MODULE_1__","p"],"mappings":"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","file":"component---src-pages-404-tsx-f7e2f72e0b0a646ae176.js","sourcesContent":["import { graphql, Link } from 'gatsby';\nimport * as React from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\n\nimport SiteNavLogo from '../components/header/SiteNavLogo';\nimport PostCard from '../components/PostCard';\nimport Wrapper from '../components/Wrapper';\nimport IndexLayout from '../layouts';\nimport { colors } from '../styles/colors';\nimport { inner, outer, PostFeed, SiteHeader } from '../styles/shared';\nimport { PageContext } from '../templates/post';\n\nconst SiteNavCenter = styled.nav`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n\n  .site-nav-logo {\n    margin-right: 0;\n  }\n`;\n\nconst ErrorTemplate = css`\n  padding: 7vw 4vw;\n`;\n\nconst ErrorCode = styled.h1`\n  margin: 0;\n  font-size: 12vw;\n  line-height: 1em;\n  letter-spacing: -5px;\n  opacity: 0.3;\n`;\n\nconst ErrorDescription = styled.p`\n  margin: 0;\n  color: ${colors.midgrey};\n  font-size: 3rem;\n  line-height: 1.3em;\n  font-weight: 400;\n`;\n\nconst ErrorLink = css`\n  display: inline-block;\n  margin-top: 5px;\n`;\n\ninterface NotFoundTemplateProps {\n  data: {\n    allMarkdownRemark: {\n      totalCount: number;\n      edges: Array<{\n        node: PageContext;\n      }>;\n    };\n  };\n}\n\nconst NotFoundPage: React.FC<NotFoundTemplateProps> = props => {\n  const { edges } = props.data.allMarkdownRemark;\n\n  return (\n    <IndexLayout>\n      <Wrapper>\n        <header css={[SiteHeader, outer]}>\n          <div className=\"inner\">\n            <SiteNavCenter>\n              <SiteNavLogo />\n            </SiteNavCenter>\n          </div>\n        </header>\n        <main id=\"site-main\" css={[ErrorTemplate, outer]}>\n          <div css={inner}>\n            <section style={{ textAlign: 'center' }}>\n              <ErrorCode>404</ErrorCode>\n              <ErrorDescription>Page not found</ErrorDescription>\n              <Link css={ErrorLink} to=\"\">\n                Go to the front page →\n              </Link>\n            </section>\n          </div>\n        </main>\n        <aside css={outer}>\n          <div css={inner}>\n            <div css={PostFeed}>\n              {edges.map(({ node }) => (\n                <PostCard key={node.fields.slug} post={node} />\n              ))}\n            </div>\n          </div>\n        </aside>\n      </Wrapper>\n    </IndexLayout>\n  );\n};\n\nexport default NotFoundPage;\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(limit: 3, sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          timeToRead\n          frontmatter {\n            title\n            date\n            tags\n            image {\n              childImageSharp {\n                fluid(maxWidth: 3720) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            author {\n              id\n              bio\n              avatar {\n                children {\n                  ... on ImageSharp {\n                    fixed(quality: 90) {\n                      src\n                    }\n                  }\n                }\n              }\n            }\n          }\n          excerpt\n          fields {\n            layout\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n","export const colors = {\n  blue: '#3eb0ef',\n  green: '#a4d037',\n  purple: '#ad26b4',\n  yellow: '#fecd35',\n  red: '#f05230',\n  darkgrey: '#15171A',\n  midgrey: '#738a94',\n  lightgrey: '#c5d2d9',\n  whitegrey: '#e5eff5',\n  pink: '#fa3a57',\n  brown: '#a3821a',\n};\n","export interface WebsiteConfig {\n  title: string;\n  mainTitle: string;\n  description: string;\n  coverImage: string;\n  logo: string;\n  /**\n   * Specifying a valid BCP 47 language helps screen readers announce text properly.\n   * See: https://dequeuniversity.com/rules/axe/2.2/valid-lang\n   */\n  lang: string;\n  /**\n   * blog full path, no ending slash!\n   */\n  siteUrl: string;\n  /**\n   * full url, no username\n   */\n  facebook?: string;\n  /**\n   * full url, no username\n   */\n  twitter?: string;\n  linkedin?: string;\n  github?: string;\n  /**\n   * hide or show all email subscribe boxes\n   */\n  showSubscribe: boolean;\n  /**\n   * create a list on mailchimp and then create an embeddable signup form. this is the form action\n   */\n  mailchimpAction?: string;\n  /**\n   * this is the hidden input field name\n   */\n  mailchimpName?: string;\n  /**\n   * name and id of the mailchimp email field\n   */\n  mailchimpEmailFieldName?: string;\n  /**\n  /**\n   * Meta tag for Google Webmaster Tools\n   */\n  googleSiteVerification?: string;\n  /**\n  /**\n   * Appears alongside the footer, after the credits\n   */\n  footer?: string;\n}\n\nconst config: WebsiteConfig = {\n  title: 'Clark 神 Q 超人 | Enjoy life enjoy coding',\n  mainTitle: 'GQSM',\n  description: 'Enjoy life enjoy coding',\n  coverImage: 'img/blog-cover.jpg',\n  logo: 'img/gqsm-logo.png',\n  lang: 'en',\n  siteUrl: 'https://gatsby-casper.netlify.com',\n  facebook: 'https://www.facebook.com/profile.php?id=100000310308450',\n  twitter: '',\n  linkedin: 'https://www.linkedin.com/in/guan-lin-huang-335027196/',\n  github: 'https://github.com/ms314006',\n  showSubscribe: false,\n  mailchimpAction: 'https://twitter.us19.list-manage.com/subscribe/post?u=a89b6987ac248c81b0b7f3a0f&amp;id=7d777b7d75',\n  mailchimpName: 'b_a89b6987ac248c81b0b7f3a0f_7d777b7d75',\n  mailchimpEmailFieldName: 'MERGE0',\n  googleSiteVerification: 'GoogleCode',\n  footer: 'is based on Gatsby Casper',\n};\n\nexport default config;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import { css } from '@emotion/core';\nimport styled from '@emotion/styled';\nimport { colors } from './colors';\nimport { darken, lighten } from 'polished';\n\nexport const outer = css`\n  position: relative;\n  padding: 0 4vw;\n`;\n\n// Centered content container blocks\nexport const inner = css`\n  margin: 0 auto;\n  max-width: 1040px;\n  width: 100%;\n`;\n\nexport const blackMask = css`\n  background: #00000055;\n  height: 100%;\n  width: 100%;\n  position: absolute;\n`;\n\nexport const SiteMain = css`\n  z-index: 100;\n  flex-grow: 1;\n`;\n\nexport const SiteTitle = styled.h1`\n  z-index: 10;\n  margin: 0;\n  padding: 0;\n  font-size: 3.8rem;\n  font-weight: 700;\n`;\n\nexport const SiteDescription = styled.h2`\n  z-index: 10;\n  margin: 0;\n  padding: 5px 0;\n  font-size: 2.2rem;\n  font-weight: 300;\n  letter-spacing: 0.5px;\n  opacity: 0.8;\n`;\n\nexport const PostFeed = css`\n  position: relative;\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0 -20px;\n  padding: 40px 0 0 0;\n`;\n\nexport const PostFeedRaise = css`\n  @media (min-width: 900px) {\n    margin-top: -70px;\n    padding-top: 0;\n  }\n`;\n\nexport const SocialLink = css`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0;\n  padding: 10px;\n  color: #fff;\n  opacity: 0.8;\n\n  :hover {\n    opacity: 1;\n  }\n\n  svg {\n    height: 1.8rem;\n    fill: #fff;\n  }\n`;\n\nexport const SiteHeader = css`\n  position: relative;\n  padding: 0;\n  color: #fff;\n  /* background: color(var(--darkgrey) l(-5%)) no-repeat center center; */\n  background: ${darken('0.05', colors.darkgrey)} no-repeat center center;\n  background-size: cover;\n`;\n\nexport const SiteHeaderContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 10vw 4vw;\n  min-height: 200px;\n  max-height: 450px;\n  text-align: center;\n`;\n\nexport const SiteHeaderStyles = css`\n  content: '';\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: auto;\n  left: 0;\n  z-index: 10;\n  display: block;\n  height: 80px;\n  background: linear-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0));\n\n  :before {\n    content: '';\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    z-index: 10;\n    display: block;\n    background: rgba(0, 0, 0, 0.18);\n  }\n\n  :after {\n    content: '';\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: auto;\n    left: 0;\n    z-index: 10;\n    display: block;\n    height: 80px;\n    background: linear-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0));\n  }\n  @media (max-width: 700px) {\n    padding-right: 0;\n    padding-left: 0;\n  }\n`;\n\nexport const AuthorProfileImage = css`\n  display: block;\n  /* background: color(var(--lightgrey) l(+10%)); */\n  background: ${lighten('0.1', colors.lightgrey)};\n  border-radius: 100%;\n  object-fit: cover;\n  margin-right: 15px;\n  width: 60px;\n  height: 60px;\n`;\n","import * as React from 'react';\nimport styled from '@emotion/styled';\n\nconst StyledWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n`;\n\ninterface WrapperProps {\n  className?: string;\n}\n\nconst Wrapper: React.FC<WrapperProps> = ({ children, className }) => (\n  <StyledWrapper className={className}>{children}</StyledWrapper>\n);\n\nexport default Wrapper;\n","import { Global, css } from '@emotion/core';\nimport { darken, lighten } from 'polished';\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\n\nimport { colors } from '../styles/colors';\n// @ts-ignore\nimport favicon from '../../src/favicon.ico';\n\ninterface IndexProps {\n  className?: string;\n}\n\nconst GlobalStyles = css`\n  html,\n  body,\n  div,\n  span,\n  applet,\n  object,\n  iframe,\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6,\n  p,\n  blockquote,\n  pre,\n  a,\n  abbr,\n  acronym,\n  address,\n  big,\n  cite,\n  code,\n  del,\n  dfn,\n  em,\n  img,\n  ins,\n  kbd,\n  q,\n  s,\n  samp,\n  small,\n  strike,\n  strong,\n  sub,\n  sup,\n  tt,\n  var,\n  dl,\n  dt,\n  dd,\n  ol,\n  ul,\n  li,\n  fieldset,\n  form,\n  label,\n  legend,\n  table,\n  caption,\n  tbody,\n  tfoot,\n  thead,\n  tr,\n  th,\n  td,\n  article,\n  aside,\n  canvas,\n  details,\n  embed,\n  figure,\n  figcaption,\n  footer,\n  header,\n  hgroup,\n  menu,\n  nav,\n  output,\n  ruby,\n  section,\n  summary,\n  time,\n  mark,\n  audio,\n  video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font: inherit;\n    font-size: 100%;\n    vertical-align: baseline;\n  }\n  body {\n    line-height: 1;\n  }\n  ol,\n  ul {\n    list-style: none;\n  }\n  blockquote,\n  q {\n    quotes: none;\n  }\n  blockquote:before,\n  blockquote:after,\n  q:before,\n  q:after {\n    content: '';\n    content: none;\n  }\n  table {\n    border-spacing: 0;\n    border-collapse: collapse;\n  }\n  img {\n    max-width: 100%;\n  }\n  html {\n    box-sizing: border-box;\n    font-family: sans-serif;\n\n    -ms-text-size-adjust: 100%;\n    -webkit-text-size-adjust: 100%;\n  }\n  *,\n  *:before,\n  *:after {\n    box-sizing: inherit;\n  }\n  a {\n    background-color: transparent;\n  }\n  a:active,\n  a:hover {\n    outline: 0;\n  }\n  b,\n  strong {\n    font-weight: bold;\n  }\n  i,\n  em,\n  dfn {\n    font-style: italic;\n  }\n  h1 {\n    margin: 0.67em 0;\n    font-size: 2em;\n  }\n  small {\n    font-size: 80%;\n  }\n  sub,\n  sup {\n    position: relative;\n    font-size: 75%;\n    line-height: 0;\n    vertical-align: baseline;\n  }\n  sup {\n    top: -0.5em;\n  }\n  sub {\n    bottom: -0.25em;\n  }\n  img {\n    border: 0;\n  }\n  svg:not(:root) {\n    overflow: hidden;\n  }\n  mark {\n    background-color: #fdffb6;\n  }\n  code,\n  kbd,\n  pre,\n  samp {\n    font-family: monospace, monospace;\n    font-size: 1em;\n  }\n  button,\n  input,\n  optgroup,\n  select,\n  textarea {\n    margin: 0;\n    color: inherit;\n    font: inherit;\n  }\n  button {\n    overflow: visible;\n    border: none;\n  }\n  button,\n  select {\n    text-transform: none;\n  }\n  button,\n  html input[type='button'],\n  input[type='reset'],\n  input[type='submit'] {\n    cursor: pointer;\n\n    -webkit-appearance: button;\n  }\n  button[disabled],\n  html input[disabled] {\n    cursor: default;\n  }\n  button::-moz-focus-inner,\n  input::-moz-focus-inner {\n    padding: 0;\n    border: 0;\n  }\n  input {\n    line-height: normal;\n  }\n  input:focus {\n    outline: none;\n  }\n  input[type='checkbox'],\n  input[type='radio'] {\n    box-sizing: border-box;\n    padding: 0;\n  }\n  input[type='number']::-webkit-inner-spin-button,\n  input[type='number']::-webkit-outer-spin-button {\n    height: auto;\n  }\n  input[type='search'] {\n    box-sizing: content-box;\n\n    -webkit-appearance: textfield;\n  }\n  input[type='search']::-webkit-search-cancel-button,\n  input[type='search']::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n  legend {\n    padding: 0;\n    border: 0;\n  }\n  textarea {\n    overflow: auto;\n  }\n  table {\n    border-spacing: 0;\n    border-collapse: collapse;\n  }\n  td,\n  th {\n    padding: 0;\n  }\n\n  html {\n    overflow-x: hidden;\n    overflow-y: scroll;\n    font-size: 62.5%;\n\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  }\n  body {\n    overflow-x: hidden;\n    color: ${darken('0.25', colors.midgrey)};\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell,\n      'Open Sans', 'Helvetica Neue', sans-serif;\n    font-size: 1.5rem;\n    line-height: 1.6em;\n    font-weight: 400;\n    font-style: normal;\n    letter-spacing: 0;\n    text-rendering: optimizeLegibility;\n    background: #fff;\n\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    -moz-font-feature-settings: 'liga' on;\n  }\n\n  ::selection {\n    text-shadow: none;\n    background: ${lighten('0.3', colors.blue)};\n  }\n\n  hr {\n    position: relative;\n    display: block;\n    width: 100%;\n    margin: 2.5em 0 3.5em;\n    padding: 0;\n    height: 1px;\n    border: 0;\n    border-top: 1px solid ${lighten('0.1', colors.lightgrey)};\n  }\n\n  audio,\n  canvas,\n  iframe,\n  img,\n  svg,\n  video {\n    vertical-align: middle;\n  }\n\n  fieldset {\n    margin: 0;\n    padding: 0;\n    border: 0;\n  }\n\n  textarea {\n    resize: vertical;\n  }\n\n  p,\n  ul,\n  ol,\n  dl,\n  blockquote {\n    margin: 0 0 1.5em 0;\n  }\n\n  ol,\n  ul {\n    padding-left: 1.3em;\n    padding-right: 1.5em;\n  }\n\n  ol ol,\n  ul ul,\n  ul ol,\n  ol ul {\n    margin: 0.5em 0 1em;\n  }\n\n  ul {\n    list-style: disc;\n  }\n\n  ol {\n    list-style: decimal;\n  }\n\n  ul,\n  ol {\n    max-width: 100%;\n  }\n\n  li {\n    margin: 0.5em 0;\n    padding-left: 0.3em;\n    line-height: 1.6em;\n  }\n\n  dt {\n    float: left;\n    margin: 0 20px 0 0;\n    width: 120px;\n    color: ${colors.darkgrey};\n    font-weight: 500;\n    text-align: right;\n  }\n\n  dd {\n    margin: 0 0 5px 0;\n    text-align: left;\n  }\n\n  blockquote {\n    margin: 1.5em 0;\n    padding: 0 1.6em 0 1.6em;\n    border-left: ${colors.whitegrey} 0.5em solid;\n  }\n\n  blockquote p {\n    margin: 0.8em 0;\n    font-size: 1.2em;\n    font-weight: 300;\n  }\n\n  blockquote small {\n    display: inline-block;\n    margin: 0.8em 0 0.8em 1.5em;\n    font-size: 0.9em;\n    opacity: 0.8;\n  }\n\n  blockquote small:before {\n    content: '\\\\2014 \\\\00A0';\n  }\n\n  blockquote cite {\n    font-weight: bold;\n  }\n  blockquote cite a {\n    font-weight: normal;\n  }\n\n  a {\n    color: ${darken('0.05', colors.blue)};\n    text-decoration: none;\n  }\n\n  a:hover {\n    text-decoration: underline;\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    margin-top: 0;\n    line-height: 1.15;\n    font-weight: 700;\n    text-rendering: optimizeLegibility;\n  }\n\n  h1 {\n    margin: 0 0 0.5em 0;\n    font-size: 5rem;\n    font-weight: 700;\n  }\n  @media (max-width: 500px) {\n    h1 {\n      font-size: 2.2rem;\n    }\n  }\n\n  h2 {\n    margin: 1.5em 0 0.5em 0;\n    font-size: 2rem;\n  }\n  @media (max-width: 500px) {\n    h2 {\n      font-size: 1.8rem;\n    }\n  }\n\n  h3 {\n    margin: 1.5em 0 0.5em 0;\n    font-size: 1.8rem;\n    font-weight: 500;\n  }\n  @media (max-width: 500px) {\n    h3 {\n      font-size: 1.7rem;\n    }\n  }\n\n  h4 {\n    margin: 1.5em 0 0.5em 0;\n    font-size: 1.6rem;\n    font-weight: 500;\n  }\n\n  h5 {\n    margin: 1.5em 0 0.5em 0;\n    font-size: 1.4rem;\n    font-weight: 500;\n  }\n\n  h6 {\n    margin: 1.5em 0 0.5em 0;\n    font-size: 1.4rem;\n    font-weight: 500;\n  }\n\n  body {\n    background: #f4f8fb;\n  }\n`;\n\nconst IndexLayout: React.FC<IndexProps> = props => {\n  return (\n    <div className={props.className}>\n      <Helmet>\n        <link rel=\"icon\" href={favicon} type=\"image/x-icon\" />\n      </Helmet>\n      <Global styles={GlobalStyles} />\n      {props.children}\n    </div>\n  );\n};\n\nexport default IndexLayout;\n","import { Link } from 'gatsby';\nimport Img from 'gatsby-image';\nimport * as _ from 'lodash';\nimport * as React from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\n\nimport { colors } from '../styles/colors';\nimport { PageContext } from '../templates/post';\n\nconst PostCardStyles = css`\n  flex: 1 1 300px;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  margin: 0 20px 40px;\n  min-height: 300px;\n  background: #fff center center;\n  background-size: cover;\n  border-radius: 5px;\n  box-shadow: rgba(39, 44, 49, 0.06) 8px 14px 38px, rgba(39, 44, 49, 0.03) 1px 3px 8px;\n  transition: all 0.5s ease;\n\n  :hover {\n    box-shadow: rgba(39, 44, 49, 0.07) 8px 28px 50px, rgba(39, 44, 49, 0.04) 1px 6px 12px;\n    transition: all 0.4s ease;\n    transform: translate3D(0, -1px, 0) scale(1.02);\n  }\n`;\n\nconst PostCardImageLink = css`\n  position: relative;\n  display: block;\n  overflow: hidden;\n  border-radius: 5px 5px 0 0;\n`;\n\nconst PostCardImage = styled.div`\n  width: auto;\n  height: 200px;\n  background: ${colors.lightgrey} no-repeat center center;\n  background-size: cover;\n`;\n\nconst PostCardContent = styled.div`\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nconst PostCardContentLink = css`\n  position: relative;\n  flex-grow: 1;\n  display: block;\n  padding: 25px 25px 0;\n  color: ${colors.darkgrey};\n\n  :hover {\n    text-decoration: none;\n  }\n`;\n\nconst PostCardTags = styled.span`\n  display: block;\n  margin-bottom: 4px;\n  color: ${colors.midgrey};\n  font-size: 1.2rem;\n  line-height: 1.15em;\n  font-weight: 500;\n  letter-spacing: 0.5px;\n  text-transform: uppercase;\n`;\n\nconst PostCardTitle = styled.h2`\n  margin-top: 0;\n`;\n\nconst PostCardExcerpt = styled.section`\n  font-family: Georgia, serif;\n`;\n\nconst PostCardMeta = styled.footer`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n  padding: 0 25px 25px;\n`;\n\nconst ReadingTime = styled.span`\n  flex-shrink: 0;\n  color: ${colors.midgrey};\n  font-size: 1.2rem;\n  line-height: 33px;\n  font-weight: 500;\n  letter-spacing: 0.5px;\n  text-transform: uppercase;\n`;\n\nexport interface PostCardProps {\n  post: PageContext;\n}\n\nconst PostCard: React.FC<PostCardProps> = ({ post }) => {\n  return (\n    <article\n      className={`post-card ${post.frontmatter.image ? '' : 'no-image'}`}\n      css={PostCardStyles}\n    >\n      {post.frontmatter.image && (\n        <Link className=\"post-card-image-link\" css={PostCardImageLink} to={post.fields.slug}>\n          <PostCardImage className=\"post-card-image\">\n            {post.frontmatter.image &&\n              post.frontmatter.image.childImageSharp &&\n              post.frontmatter.image.childImageSharp.fluid && (\n              <Img\n                alt={`${post.frontmatter.title} cover image`}\n                style={{ height: '100%' }}\n                fluid={post.frontmatter.image.childImageSharp.fluid}\n              />\n            )}\n          </PostCardImage>\n        </Link>\n      )}\n      <PostCardContent className=\"post-card-content\">\n        <Link className=\"post-card-content-link\" css={PostCardContentLink} to={post.fields.slug}>\n          <header className=\"post-card-header\">\n            {post.frontmatter.tags && <PostCardTags>{post.frontmatter.tags[0]}</PostCardTags>}\n            <PostCardTitle>{post.frontmatter.title}</PostCardTitle>\n          </header>\n          <PostCardExcerpt>\n            <p>{post.excerpt}</p>\n          </PostCardExcerpt>\n        </Link>\n        <PostCardMeta className=\"post-card-meta\">\n          <ReadingTime>{post.timeToRead} min read</ReadingTime>\n        </PostCardMeta>\n      </PostCardContent>\n    </article>\n  );\n};\n\nexport default PostCard;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { graphql, Link, StaticQuery } from 'gatsby';\nimport * as React from 'react';\nimport { css } from '@emotion/core';\n\nimport config from '../../website-config';\n\nconst SiteNavLogoStyles = css`\n  flex-shrink: 0;\n  display: block;\n  margin-right: 24px;\n  padding: 11px 0;\n  color: #fff;\n  font-size: 1.7rem;\n  line-height: 1em;\n  font-weight: bold;\n  letter-spacing: -0.5px;\n\n  :hover {\n    text-decoration: none;\n  }\n\n  img {\n    display: block;\n    width: auto;\n    height: 21px;\n  }\n`;\n\ninterface SiteNavLogoProps {\n  logo?: {\n    childImageSharp: {\n      fixed: any;\n    };\n  };\n}\n\nconst SiteNavLogo = () => (\n  <StaticQuery\n    query={graphql`\n      query HeadingQuery {\n        logo: file(relativePath: { eq: \"img/gqsm-logo.png\" }) {\n          childImageSharp {\n            fixed {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n      }\n    `}\n    // tslint:disable-next-line:react-this-binding-issue\n    render={(data: SiteNavLogoProps) => (\n      <Link className=\"site-nav-logo\" css={SiteNavLogoStyles} to=\"/\">\n        {data.logo ? (\n          <img src={data.logo.childImageSharp.fixed.src} alt={config.title} />\n        ) : (\n          config.title\n        )}\n      </Link>\n    )}\n  />\n);\n\nexport default SiteNavLogo;\n","module.exports = __webpack_public_path__ + \"static/favicon-bca487154c11d830750d2707c9e6d3e5.ico\";"],"sourceRoot":""}