{"version":3,"sources":["webpack:///./src/components/icons/infinity.tsx","webpack:///./src/components/ReadNextCard.tsx","webpack:///./src/components/subscribe/Subscribe.tsx","webpack:///./src/components/Comments.tsx","webpack:///./src/templates/post.tsx","webpack:///./src/pages/about.tsx","webpack:///./src/components/PostContent.tsx"],"names":["InfinityIcon","Object","core_browser_esm","xmlns","viewBox","d","ReadNextCardStyles","styled_base_browser_esm","target","colors","darkgrey","props","coverImage","ReadNextCardHeader","name","styles","ReadNextCardHeaderSitetitle","ReadNextCardHeaderTitle","ReadNextDivider","ReadNextCardContent","ReadNextCardFooter","ReadNextCard","gatsby_browser_entry","query","render","_ref","header","childImageSharp","fluid","src","config","title","to","_","tags","infinity","relatedPosts","edges","map","n","key","node","frontmatter","fields","slug","totalCount","data","_1676377518","SubscribeFormSection","lighten","whitegrey","midgrey","SubscribeFormTitle","css","Subscribe","SubscribeForm","Comments","useEffect","script","document","createElement","setAttribute","async","comments","getElementById","appendChild","innerHTML","id","PostTemplate","PostFull","NoImage","PostFullHeader","PostFullMeta","PostFullMetaDate","blue","PostFullTitle","setLightness","PostFullImage","lightgrey","DateDivider","ReadNextFeed","PageTemplate","post","markdownRemark","width","height","image","sizes","split","String","Number","aspectRatio","layouts","className","Helmet","lang","content","excerpt","property","siteUrl","pathContext","date","facebook","author","twitter","Wrapper","css_browser_esm","outer","SiteHeader","inner","SiteNav","SiteMain","dateTime","userDate","length","react","tag","index","gatsby_image_default","a","style","PostContent","htmlAst","showSubscribe","subscribe_Subscribe","components_Comments","components_ReadNextCard","pageContext","prev","PostCard","next","Footer","About","_emotion_core__WEBPACK_IMPORTED_MODULE_6__","_layouts__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_10___default","_components_Wrapper__WEBPACK_IMPORTED_MODULE_2__","_emotion_css__WEBPACK_IMPORTED_MODULE_0__","_components_header_SiteNav__WEBPACK_IMPORTED_MODULE_3__","_templates_post__WEBPACK_IMPORTED_MODULE_7__","_components_PostContent__WEBPACK_IMPORTED_MODULE_8__","_components_Footer__WEBPACK_IMPORTED_MODULE_9__","PostFullContent","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_4__","darken","setSaturation","renderAst","RehypeReact","React","components","Compiler","Ast","ast","_objectWithoutPropertiesLoose","properties","_ref2","_emotion_core__WEBPACK_IMPORTED_MODULE_9__"],"mappings":"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","file":"component---src-pages-about-tsx-96af0c280bdd75780dc5.js","sourcesContent":["// tslint:disable:no-http-string\nimport * as React from 'react';\n\nconst InfinityIcon: React.FC = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n    <path d=\"M13 14.5s2 3 5 3 5.5-2.463 5.5-5.5S21 6.5 18 6.5c-5 0-7 11-12 11C2.962 17.5.5 15.037.5 12S3 6.5 6 6.5s4.5 3.5 4.5 3.5\" />\n  </svg>\n);\nexport default InfinityIcon;\n","import { Link, StaticQuery, graphql } from 'gatsby';\nimport * as React from 'react';\nimport styled from '@emotion/styled';\nimport * as _ from 'lodash';\n\nimport { colors } from '../styles/colors';\nimport InfinityIcon from './icons/infinity';\nimport config from '../website-config';\n\nexport interface ReadNextCardStylesProps {\n  coverImage: string;\n}\n\nconst ReadNextCardStyles = styled.article<ReadNextCardStylesProps>`\n  position: relative;\n  flex: 1 1 300px;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  margin: 0 20px 40px;\n  padding: 25px;\n  color: #fff;\n  background: ${colors.darkgrey} center center;\n  background-size: cover;\n  border-radius: 5px;\n  box-shadow: rgba(39, 44, 49, 0.06) 8px 14px 38px, rgba(39, 44, 49, 0.03) 1px 3px 8px;\n  background-image: url(${props => props.coverImage});\n\n  :before {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    display: block;\n    background: linear-gradient(135deg, rgba(0,40,60,0.8) 0%,rgba(0,20,40,0.7) 100%);\n    border-radius: 5px;\n    backdrop-filter: blur(2px);\n  }\n`;\n\nconst ReadNextCardHeader = styled.header`\n  position: relative;\n  z-index: 50;\n  padding-top: 20px;\n  text-align: center;\n`;\n\nconst ReadNextCardHeaderSitetitle = styled.small`\n  display: block;\n  font-size: 1.3rem;\n  line-height: 1.3em;\n  opacity: 0.8;\n`;\n\nconst ReadNextCardHeaderTitle = styled.h3`\n  margin: 0;\n  padding: 0 20px;\n  color: #fff;\n  font-size: 3rem;\n  line-height: 1.2em;\n  letter-spacing: 1px;\n\n  a {\n    color: #fff;\n    font-weight: 300;\n    text-decoration: none;\n  }\n\n  a:hover {\n    text-decoration: none;\n  }\n`;\n\nconst ReadNextDivider = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  height: 80px;\n\n  svg {\n    width: 40px;\n    fill: transparent;\n    stroke: #fff;\n\n    stroke-width: 0.5px;\n    stroke-opacity: 0.65;\n  }\n`;\n\nconst ReadNextCardContent = styled.div`\n  position: relative;\n  z-index: 50;\n  flex-grow: 1;\n  display: flex;\n  font-size: 1.7rem;\n\n  ul {\n    display: flex;\n    flex-direction: column;\n    margin: 0 auto;\n    padding: 0;\n    text-align: center;\n    list-style: none;\n  }\n\n  li {\n    margin: 0;\n    padding: 0;\n    font-size: 1.6rem;\n    line-height: 1.25em;\n    font-weight: 200;\n    letter-spacing: -0.5px;\n  }\n\n  li a {\n    display: block;\n    padding: 20px 0;\n    border-bottom: rgba(255, 255, 255, 0.3) 1px solid;\n    color: #fff;\n    font-weight: 500;\n    vertical-align: top;\n    transition: opacity 0.3s ease;\n  }\n\n  li:first-of-type a {\n    padding-top: 10px;\n  }\n\n  li a:hover {\n    opacity: 1;\n  }\n`;\n\nconst ReadNextCardFooter = styled.footer`\n  position: relative;\n  margin: 15px 0 3px 0;\n  text-align: center;\n\n  a {\n    color: #fff;\n  }\n`;\n\nexport interface ReadNextProps {\n  tags: string[];\n  relatedPosts: {\n    totalCount: number;\n    edges: Array<{\n      node: {\n        timeToRead: number;\n        frontmatter: {\n          title: string;\n        };\n        fields: {\n          slug: string;\n        };\n      };\n    }>;\n  };\n}\n\nexport interface ReadNextQuery {\n  header: {\n    childImageSharp: {\n      fluid: any;\n    };\n  };\n}\n\nconst ReadNextCard: React.FC<ReadNextProps> = props => {\n  return (\n    <StaticQuery\n      query={graphql`\n        query ReadNextQuery {\n          header: file(relativePath: { eq: \"img/blog-cover.jpg\" }) {\n            childImageSharp {\n              # Specify the image processing specifications right in the query.\n              # Makes it trivial to update as your page's design changes.\n              fluid(maxWidth: 2000) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      `}\n      // tslint:disable-next-line:react-this-binding-issue\n      render={({ header }: ReadNextQuery) => (\n        <ReadNextCardStyles coverImage={header.childImageSharp.fluid.src}>\n          <ReadNextCardHeader>\n            <ReadNextCardHeaderSitetitle>\n              &mdash; {config.title} &mdash;\n            </ReadNextCardHeaderSitetitle>\n            <ReadNextCardHeaderTitle>\n              <Link to={`/tags/${_.kebabCase(props.tags[0])}/`}>{props.tags[0]}</Link>\n            </ReadNextCardHeaderTitle>\n          </ReadNextCardHeader>\n          <ReadNextDivider>\n            <InfinityIcon />\n          </ReadNextDivider>\n          <ReadNextCardContent>\n            <ul>\n              {props.relatedPosts.edges.map(n => {\n                return (\n                  <li key={n.node.frontmatter.title}>\n                    <Link to={n.node.fields.slug}>{n.node.frontmatter.title}</Link>\n                  </li>\n                );\n              })}\n            </ul>\n          </ReadNextCardContent>\n          <ReadNextCardFooter>\n            <Link to={`/tags/${_.kebabCase(props.tags[0])}/`}>\n              {props.relatedPosts.totalCount > 1 &&\n                `See all ${props.relatedPosts.totalCount} posts`}\n              {props.relatedPosts.totalCount === 1 && '1 post'}\n              {props.relatedPosts.totalCount === 0 && 'No posts'} →\n            </Link>\n          </ReadNextCardFooter>\n        </ReadNextCardStyles>\n      )}\n    />\n  );\n};\n\nexport default ReadNextCard;\n","import { lighten } from 'polished';\nimport * as React from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\n\nimport { colors } from '../../styles/colors';\nimport SubscribeForm from './SubscribeForm';\n\nconst SubscribeFormSection = styled.section`\n  margin: 1.5em 0;\n  padding: 6.5vw 7vw 7vw;\n  /* border: color(var(--whitegrey) l(+2%)) 1px solid; */\n  border: ${lighten('0.02', colors.whitegrey)} 1px solid;\n  text-align: center;\n  /* background: color(var(--whitegrey) l(+4%)); */\n  background: ${lighten('0.04', colors.whitegrey)};\n  border-radius: 7px;\n\n  p {\n    margin-bottom: 1em;\n    color: ${colors.midgrey};\n    font-size: 2.2rem;\n    line-height: 1.55em;\n    letter-spacing: 0.2px;\n  }\n\n  form {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: 0 auto;\n    max-width: 420px;\n  }\n\n  .form-group {\n    flex-grow: 1;\n  }\n  @media (max-width: 650px) {\n    p {\n      font-size: 1.6rem;\n    }\n  }\n`;\n\nconst SubscribeFormTitle = css`\n  margin: 0 0 3px 0;\n  padding: 0;\n  color: ${colors.darkgrey};\n  font-size: 3.5rem;\n  line-height: 1;\n  font-weight: 700;\n  @media (max-width: 650px) {\n    font-size: 2.4rem;\n  }\n`;\n\nexport interface SubscribeProps {\n  title: string;\n}\n\nconst Subscribe: React.FC<SubscribeProps> = props => {\n  return (\n    <SubscribeFormSection>\n      <h3 css={SubscribeFormTitle}>Subscribe to {props.title}</h3>\n      <p>Get the latest posts delivered right to your inbox</p>\n      <SubscribeForm />\n    </SubscribeFormSection>\n  );\n};\n\nexport default Subscribe;\n","import React, { useEffect } from 'react';\n\nconst COMMENTS_ID = 'comments-container';\n\nconst Comments = () => {\n  useEffect(() => {\n    const script = document.createElement('script');\n    script.src = 'https://utteranc.es/client.js';\n    script.setAttribute('repo', 'ms314006/ms314006.github.io.comment');\n    script.setAttribute('issue-term', 'pathname');\n    script.setAttribute('label', '💬');\n    script.setAttribute('theme', 'github-light');\n    script.setAttribute('crossorigin', 'anonymous');\n    script.async = true;\n\n    const comments = document.getElementById(COMMENTS_ID);\n\n    if (comments) {\n      comments.appendChild(script);\n    }\n\n    return () => {\n      const comments = document.getElementById(COMMENTS_ID);\n      if (comments) {\n        comments.innerHTML = '';\n      }\n    };\n  }, []);\n  return <div id={COMMENTS_ID} />;\n};\n\nexport default Comments;\n","import { graphql, Link } from 'gatsby';\nimport Img from 'gatsby-image';\nimport * as _ from 'lodash';\nimport { setLightness } from 'polished';\nimport * as React from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\nimport { Helmet } from 'react-helmet';\n\nimport AuthorCard from '../components/AuthorCard';\nimport Footer from '../components/Footer';\nimport SiteNav from '../components/header/SiteNav';\nimport PostCard from '../components/PostCard';\nimport PostContent from '../components/PostContent';\nimport PostFullFooter from '../components/PostFullFooter';\nimport PostFullFooterRight from '../components/PostFullFooterRight';\nimport ReadNextCard from '../components/ReadNextCard';\nimport Subscribe from '../components/subscribe/Subscribe';\nimport Comments from '../components/Comments';\nimport Wrapper from '../components/Wrapper';\nimport IndexLayout from '../layouts';\nimport { colors } from '../styles/colors';\nimport { inner, outer, SiteHeader, SiteMain } from '../styles/shared';\nimport config from '../website-config';\n\nconst PostTemplate = css`\n  .site-main {\n    background: #fff;\n    padding-bottom: 4vw;\n  }\n`;\n\nexport const PostFull = css`\n  position: relative;\n  z-index: 50;\n`;\n\nexport const NoImage = css`\n  .post-full-content {\n    padding-top: 0;\n  }\n\n  .post-full-content:before,\n  .post-full-content:after {\n    display: none;\n  }\n`;\n\nexport const PostFullHeader = styled.header`\n  margin: 0 auto;\n  padding: 6vw 3vw 3vw;\n  max-width: 1040px;\n  text-align: center;\n\n  @media (max-width: 500px) {\n    padding: 14vw 3vw 10vw;\n  }\n`;\n\nconst PostFullMeta = styled.section`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: ${colors.midgrey};\n  font-size: 1.4rem;\n  font-weight: 600;\n  text-transform: uppercase;\n\n  @media (max-width: 500px) {\n    font-size: 1.2rem;\n    line-height: 1.3em;\n  }\n`;\n\nconst PostFullMetaDate = styled.time`\n  color: ${colors.blue};\n`;\n\nexport const PostFullTitle = styled.h1`\n  margin: 0;\n  color: ${setLightness('0.05', colors.darkgrey)};\n  @media (max-width: 500px) {\n    font-size: 2.9rem;\n  }\n`;\n\nconst PostFullImage = styled.figure`\n  margin: 0 -10vw -165px;\n  height: 800px;\n  background: ${colors.lightgrey} center center;\n  background-size: cover;\n  border-radius: 5px;\n\n  @media (max-width: 1170px) {\n    margin: 0 -4vw -100px;\n    height: 600px;\n    border-radius: 0;\n  }\n\n  @media (max-width: 800px) {\n    height: 400px;\n  }\n  @media (max-width: 500px) {\n    margin-bottom: 4vw;\n    height: 350px;\n  }\n`;\n\nconst DateDivider = styled.span`\n  display: inline-block;\n  margin: 0 6px 1px;\n`;\n\nconst ReadNextFeed = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0 -20px;\n  padding: 40px 0 0 0;\n`;\n\ninterface PageTemplateProps {\n  pathContext: {\n    slug: string;\n  };\n  data: {\n    logo: {\n      childImageSharp: {\n        fixed: any;\n      };\n    };\n    markdownRemark: {\n      html: string;\n      htmlAst: any;\n      excerpt: string;\n      timeToRead: string;\n      frontmatter: {\n        title: string;\n        date: string;\n        userDate: string;\n        image: {\n          childImageSharp: {\n            fluid: any;\n          };\n        };\n        tags: string[];\n        author: {\n          id: string;\n          bio: string;\n          avatar: {\n            children: Array<{\n              fixed: {\n                src: string;\n              };\n            }>;\n          };\n        };\n      };\n    };\n    relatedPosts: {\n      totalCount: number;\n      edges: Array<{\n        node: {\n          timeToRead: number;\n          frontmatter: {\n            title: string;\n          };\n          fields: {\n            slug: string;\n          };\n        };\n      }>;\n    };\n  };\n  pageContext: {\n    prev: PageContext;\n    next: PageContext;\n  };\n}\n\nexport interface PageContext {\n  excerpt: string;\n  timeToRead: number;\n  fields: {\n    slug: string;\n  };\n  frontmatter: {\n    image: {\n      childImageSharp: {\n        fluid: any;\n      };\n    };\n    title: string;\n    date: string;\n    draft?: boolean;\n    tags: string[];\n    author: {\n      id: string;\n      bio: string;\n      avatar: {\n        children: Array<{\n          fixed: {\n            src: string;\n          };\n        }>;\n      };\n    };\n  };\n}\n\nconst PageTemplate: React.FC<PageTemplateProps> = props => {\n  const post = props.data.markdownRemark;\n  let width = '';\n  let height = '';\n  if (post.frontmatter.image && post.frontmatter.image.childImageSharp) {\n    width = post.frontmatter.image.childImageSharp.fluid.sizes.split(', ')[1].split('px')[0];\n    height = String(Number(width) / post.frontmatter.image.childImageSharp.fluid.aspectRatio);\n  }\n\n  return (\n    <IndexLayout className=\"post-template\">\n      <Helmet>\n        <html lang={config.lang} />\n        <title>{post.frontmatter.title}</title>\n\n        <meta name=\"description\" content={post.excerpt} />\n        <meta property=\"og:site_name\" content={config.title} />\n        <meta property=\"og:type\" content=\"article\" />\n        <meta property=\"og:title\" content={post.frontmatter.title} />\n        <meta property=\"og:description\" content={post.excerpt} />\n        <meta property=\"og:url\" content={config.siteUrl + props.pathContext.slug} />\n        {(post.frontmatter.image && post.frontmatter.image.childImageSharp) && (\n          <meta property=\"og:image\" content={`${config.siteUrl}${post.frontmatter.image.childImageSharp.fluid.src}`} />\n        )}\n        <meta property=\"article:published_time\" content={post.frontmatter.date} />\n        {/* not sure if modified time possible */}\n        {/* <meta property=\"article:modified_time\" content=\"2018-08-20T15:12:00.000Z\" /> */}\n        {post.frontmatter.tags && (\n          <meta property=\"article:tag\" content={post.frontmatter.tags[0]} />\n        )}\n\n        {config.facebook && <meta property=\"article:publisher\" content={config.facebook} />}\n        {config.facebook && <meta property=\"article:author\" content={config.facebook} />}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:title\" content={post.frontmatter.title} />\n        <meta name=\"twitter:description\" content={post.excerpt} />\n        <meta name=\"twitter:url\" content={config.siteUrl + props.pathContext.slug} />\n        {(post.frontmatter.image && post.frontmatter.image.childImageSharp) && (\n          <meta name=\"twitter:image\" content={`${config.siteUrl}${post.frontmatter.image.childImageSharp.fluid.src}`} />\n        )}\n        <meta name=\"twitter:label1\" content=\"Written by\" />\n        <meta name=\"twitter:data1\" content={post.frontmatter.author.id} />\n        <meta name=\"twitter:label2\" content=\"Filed under\" />\n        {post.frontmatter.tags && <meta name=\"twitter:data2\" content={post.frontmatter.tags[0]} />}\n        {config.twitter && <meta name=\"twitter:site\" content={`@${config.twitter.split('https://twitter.com/')[1]}`} />}\n        {config.twitter && <meta\n          name=\"twitter:creator\"\n          content={`@${config.twitter.split('https://twitter.com/')[1]}`}\n        />}\n        {width && <meta property=\"og:image:width\" content={width} />}\n        {height && <meta property=\"og:image:height\" content={height} />}\n      </Helmet>\n      <Wrapper css={PostTemplate}>\n        <header css={[outer, SiteHeader]}>\n          <div css={inner}>\n            <SiteNav />\n          </div>\n        </header>\n        <main id=\"site-main\" className=\"site-main\" css={[SiteMain, outer]}>\n          <div css={inner}>\n            {/* TODO: no-image css tag? */}\n            <article css={[PostFull, !post.frontmatter.image && NoImage]}>\n              <PostFullHeader>\n                <PostFullMeta>\n                  <PostFullMetaDate dateTime={post.frontmatter.date}>\n                    {post.frontmatter.userDate}\n                  </PostFullMetaDate>\n                  {post.frontmatter.tags &&\n                    post.frontmatter.tags.length > 0 && (\n                      <>\n                        <DateDivider>/</DateDivider>\n                        {\n                          post.frontmatter.tags.map((tag, index) => (\n                            <span key={tag}>\n                              <span>{index === 0 ? '' : ', '}</span>\n                              <Link to={`/tags/${_.kebabCase(tag)}/`}>\n                                {tag}\n                              </Link>\n                            </span>\n                          ))\n                        }\n                      </>\n                  )}\n                </PostFullMeta>\n                <PostFullTitle>{post.frontmatter.title}</PostFullTitle>\n              </PostFullHeader>\n\n              {(post.frontmatter.image && post.frontmatter.image.childImageSharp) && (\n                <PostFullImage>\n                  <Img\n                    style={{ height: '100%' }}\n                    fluid={post.frontmatter.image.childImageSharp.fluid}\n                  />\n                </PostFullImage>\n              )}\n              <PostContent htmlAst={post.htmlAst} />\n\n              {/* The big email subscribe modal content */}\n              {config.showSubscribe && <Subscribe title={config.title} />}\n\n              {/*\n              <PostFullFooter>\n                <AuthorCard author={post.frontmatter.author} />\n                <PostFullFooterRight authorId={post.frontmatter.author.id} />\n              </PostFullFooter>\n              */}\n            </article>\n          </div>\n          <Comments />\n        </main>\n\n        {/* Links to Previous/Next posts */}\n        <aside className=\"read-next\" css={outer}>\n          <div css={inner}>\n            <ReadNextFeed>\n              {props.data.relatedPosts && (\n                <ReadNextCard tags={post.frontmatter.tags} relatedPosts={props.data.relatedPosts} />\n              )}\n\n              {props.pageContext.prev && <PostCard post={props.pageContext.prev} />}\n              {props.pageContext.next && <PostCard post={props.pageContext.next} />}\n            </ReadNextFeed>\n          </div>\n        </aside>\n        <Footer />\n      </Wrapper>\n    </IndexLayout>\n  );\n};\n\nexport default PageTemplate;\n\nexport const query = graphql`\n  query($slug: String, $primaryTag: String) {\n    logo: file(relativePath: { eq: \"img/gqsm-logo.png\" }) {\n      childImageSharp {\n        fixed {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      htmlAst\n      excerpt\n      timeToRead\n      frontmatter {\n        title\n        userDate: date(formatString: \"D MMMM YYYY\")\n        date\n        tags\n        image {\n          childImageSharp {\n            fluid(maxWidth: 3720) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        author {\n          id\n          bio\n          avatar {\n            children {\n              ... on ImageSharp {\n                fixed(quality: 90) {\n                  ...GatsbyImageSharpFixed\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    relatedPosts: allMarkdownRemark(\n      filter: { frontmatter: { tags: { in: [$primaryTag] }, draft: { ne: true } } }\n      limit: 3\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          timeToRead\n          excerpt\n          frontmatter {\n            title\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n","import IndexLayout from '../layouts';\nimport Wrapper from '../components/Wrapper';\nimport SiteNav from '../components/header/SiteNav';\nimport { SiteHeader, outer, inner, SiteMain } from '../styles/shared';\nimport * as React from 'react';\nimport { css } from '@emotion/core';\n\nimport { PostFullHeader, PostFullTitle, NoImage, PostFull } from '../templates/post';\nimport { PostFullContent } from '../components/PostContent';\nimport Footer from '../components/Footer';\nimport Helmet from 'react-helmet';\n\nconst PageTemplate = css`\n  .site-main {\n    background: #fff;\n    padding-bottom: 4vw;\n  }\n`;\n\nconst About: React.FC = () => (\n  <IndexLayout>\n    <Helmet>\n      <title>About</title>\n    </Helmet>\n    <Wrapper css={PageTemplate}>\n      <header css={[outer, SiteHeader]}>\n        <div css={inner}>\n          <SiteNav />\n        </div>\n      </header>\n      <main id=\"site-main\" className=\"site-main\" css={[SiteMain, outer]}>\n        <article className=\"post page\" css={[PostFull, NoImage]}>\n          <PostFullHeader>\n            <PostFullTitle>About</PostFullTitle>\n          </PostFullHeader>\n\n          <PostFullContent className=\"post-full-content\">\n            <div className=\"post-content\">\n              <p>\n                Hello! My name is Clark and I am a front-end web developer!\n                I very fond of any skill of Web, especially about React! and it‘s my first of learn frameworks too!\n                I believe coding can make the world a better place, even I am ordinary!\n              </p>\n              <p>\n                Usually enjoy reading, learning and writing articles!\n                Article content will share what I learned or a lot instrest things about web and my life!\n              </p>\n              <p>\n                I hope so you can happy and feel coding is interest, when browsing my blog!\n                if you have any question, welcome contact me! I will do my best to help you!\n              </p>\n            </div>\n          </PostFullContent>\n        </article>\n      </main>\n      <Footer />\n    </Wrapper>\n  </IndexLayout>\n);\n\nexport default About;\n","import { lighten, setLightness, darken, setSaturation } from 'polished';\nimport * as React from 'react';\nimport styled from '@emotion/styled';\nimport RehypeReact from 'rehype-react';\n\nimport { colors } from '../styles/colors';\n\nexport const PostFullContent = styled.section`\n  position: relative;\n  margin: 0 auto;\n  padding: 70px 100px 0;\n  min-height: 230px;\n  font-family: Georgia, serif;\n  font-size: 2.2rem;\n  line-height: 1.6em;\n  background: #fff;\n\n  @media (max-width: 1170px) {\n    padding: 5vw 7vw 0;\n  }\n  @media (max-width: 800px) {\n    font-size: 1.9rem;\n  }\n\n  :before {\n    content: '';\n    position: absolute;\n    top: 15px;\n    left: -5px;\n    z-index: -1;\n    display: block;\n    width: 20px;\n    height: 200px;\n    background: rgba(39, 44, 49, 0.15);\n    filter: blur(5px);\n    transform: rotate(-5deg);\n  }\n\n  :after {\n    content: '';\n    position: absolute;\n    top: 15px;\n    right: -5px;\n    z-index: -1;\n    display: block;\n    width: 20px;\n    height: 200px;\n    background: rgba(39, 44, 49, 0.15);\n    filter: blur(5px);\n    transform: rotate(5deg);\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6,\n  p,\n  ul,\n  ol,\n  dl,\n  pre,\n  blockquote,\n  .post-full-comments,\n  .footnotes {\n    min-width: 100%;\n  }\n\n  li {\n    word-break: break-word;\n  }\n\n  li p {\n    margin: 0;\n  }\n\n  a {\n    color: #000;\n    word-break: break-word;\n    box-shadow: ${colors.blue} 0 -1px 0 inset;\n  }\n\n  a:hover {\n    color: ${colors.blue};\n    text-decoration: none;\n  }\n\n  strong,\n  em {\n    /* color: color(var(--darkgrey) l(-5%)); */\n    color: ${darken('0.05', colors.darkgrey)};\n  }\n\n  small {\n    display: inline-block;\n    line-height: 1.6em;\n  }\n\n  li:first-child {\n    margin-top: 0;\n  }\n\n  .gatsby-resp-image-link {\n    box-shadow: none;\n  }\n\n  img,\n  video {\n    display: block;\n    height: auto;\n    margin: auto;\n  }\n\n  @media (max-width: 1040px) {\n    img,\n    video {\n      width: 100%;\n    }\n  }\n\n  img[src$='#full'] {\n    max-width: none;\n    width: 100vw;\n  }\n\n  img + br + small {\n    display: block;\n    margin-top: -3em;\n    margin-bottom: 1.5em;\n    text-align: center;\n  }\n\n  /* Override third party iframe styles */\n  iframe {\n    margin: 0 auto !important;\n  }\n\n  blockquote {\n    margin: 0 0 1.5em;\n    padding: 0 1.5em;\n    border-left: #3eb0ef 3px solid;\n  }\n\n  blockquote p {\n    margin: 0 0 1em 0;\n    color: inherit;\n    font-size: inherit;\n    line-height: inherit;\n    font-style: italic;\n  }\n\n  blockquote p:last-child {\n    margin-bottom: 0;\n  }\n\n  code {\n    padding: 0 5px 2px;\n    font-size: 0.8em;\n    line-height: 1em;\n    font-weight: 400 !important;\n    background: ${colors.whitegrey};\n    border-radius: 3px;\n  }\n\n  p code {\n    word-break: break-all;\n  }\n\n  pre {\n    overflow-x: auto;\n    /* margin: 1.5em 0 3em; */\n    padding: 20px;\n    max-width: 100%;\n    /* border: color(var(--darkgrey) l(-10%)) 1px solid; */\n    border: ${darken('0.01', colors.darkgrey)} 1px solid;\n    color: ${colors.whitegrey};\n    font-size: 1.4rem;\n    line-height: 1.5em;\n    /* background: color(var(--darkgrey) l(-3%)); */\n    background: ${darken('0.03', colors.darkgrey)};\n    border-radius: 5px;\n  }\n\n  pre code {\n    padding: 0;\n    font-size: inherit;\n    line-height: inherit;\n    background: transparent;\n  }\n\n  pre code :not(span) {\n    color: inherit;\n  }\n\n  /* .fluid-width-video-wrapper { */\n  .gatsby-resp-iframe-wrapper {\n    margin: 1.5em 0 3em;\n  }\n\n  hr {\n    margin: 4vw 0;\n  }\n\n  hr:after {\n    content: '';\n    position: absolute;\n    top: -15px;\n    left: 50%;\n    display: block;\n    margin-left: -10px;\n    width: 1px;\n    height: 30px;\n    /* background: color(var(--lightgrey) l(+10%)); */\n    background: ${lighten('0.1', colors.lightgrey)};\n    box-shadow: #fff 0 0 0 5px;\n    transform: rotate(45deg);\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    color: ${setLightness('0.05', colors.darkgrey)};\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell,\n      'Open Sans', 'Helvetica Neue', sans-serif;\n  }\n\n  h1 {\n    margin: 0.5em 0 0.2em 0;\n    font-size: 4.6rem;\n    font-weight: 700;\n  }\n  @media (max-width: 500px) {\n    h1 {\n      font-size: 2.8rem;\n    }\n  }\n\n  h2 {\n    margin: 0.5em 0 0.2em 0;\n    font-size: 3.6rem;\n    font-weight: 700;\n  }\n  @media (max-width: 500px) {\n    h2 {\n      font-size: 2.6rem;\n    }\n  }\n\n  h3 {\n    margin: 0.5em 0 0.2em 0;\n    font-size: 2.8rem;\n    font-weight: 700;\n  }\n  @media (max-width: 500px) {\n    h3 {\n      font-size: 2.2rem;\n    }\n  }\n\n  h4 {\n    margin: 0.5em 0 0.2em 0;\n    font-size: 2.8rem;\n    font-weight: 700;\n  }\n  @media (max-width: 500px) {\n    h4 {\n      font-size: 2.2rem;\n    }\n  }\n\n  h5 {\n    display: block;\n    margin: 0.5em 0;\n    padding: 1em 0 1.5em;\n    border: 0;\n    color: ${colors.blue};\n    font-family: Georgia, serif;\n    font-size: 3.2rem;\n    line-height: 1.35em;\n    text-align: center;\n  }\n  @media (min-width: 1180px) {\n    h5 {\n      max-width: 1060px;\n    }\n  }\n  @media (max-width: 500px) {\n    h5 {\n      padding: 0 0 0.5em;\n      font-size: 2.2rem;\n    }\n  }\n\n  h6 {\n    margin: 0.5em 0 0.2em 0;\n    font-size: 2.3rem;\n    font-weight: 700;\n  }\n  @media (max-width: 500px) {\n    h6 {\n      font-size: 2rem;\n    }\n  }\n\n  /* Tables */\n  table {\n    display: inline-block;\n    overflow-x: auto;\n    margin: 0.5em 0 2.5em;\n    max-width: 100%;\n    width: auto;\n    border-spacing: 0;\n    border-collapse: collapse;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell,\n      'Open Sans', 'Helvetica Neue', sans-serif;\n    font-size: 1.6rem;\n    white-space: nowrap;\n    vertical-align: top;\n  }\n\n  table {\n    -webkit-overflow-scrolling: touch;\n    background: radial-gradient(ellipse at left, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0) 75%) 0\n        center,\n      radial-gradient(ellipse at right, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0) 75%) 100% center;\n    background-attachment: scroll, scroll;\n    background-size: 10px 100%, 10px 100%;\n    background-repeat: no-repeat;\n  }\n\n  table td:first-child {\n    background-image: linear-gradient(\n      to right,\n      rgba(255, 255, 255, 1) 50%,\n      rgba(255, 255, 255, 0) 100%\n    );\n    background-size: 20px 100%;\n    background-repeat: no-repeat;\n  }\n\n  table td:last-child {\n    background-image: linear-gradient(\n      to left,\n      rgba(255, 255, 255, 1) 50%,\n      rgba(255, 255, 255, 0) 100%\n    );\n    background-position: 100% 0;\n    background-size: 20px 100%;\n    background-repeat: no-repeat;\n  }\n\n  table th {\n    color: ${colors.darkgrey};\n    font-size: 1.2rem;\n    font-weight: 700;\n    letter-spacing: 0.2px;\n    text-align: left;\n    text-transform: uppercase;\n    /* background-color: color(var(--whitegrey) l(+4%)); */\n    background-color: ${lighten('0.04', colors.whitegrey)};\n  }\n\n  table th,\n  table td {\n    padding: 6px 12px;\n    /* border: color(var(--whitegrey) l(-1%) s(-5%)) 1px solid; */\n    border: ${setSaturation('0.05', darken('0.01', colors.whitegrey))} 1px solid;\n  }\n\n  @media (max-width: 500px) {\n    padding: 0;\n    :before {\n      display: none;\n    }\n    :after {\n      display: none;\n    }\n  }\n\n  /* Start Syntax Highlighting */\n  /* Taken from overreacted https://github.com/gaearon/overreacted.io/blob/942b41555f5e5ccbb5f93f6c26142cd90b314236/src/utils/global.css#L68 */\n  code[class*='language-'],\n  pre[class*='language-'] {\n    background: none;\n    font-family: Consolas, Menlo, Monaco, source-code-pro, Courier New, monospace;\n    font-feature-settings: normal;\n    text-align: left;\n    white-space: pre;\n    word-spacing: normal;\n    word-break: normal;\n    word-wrap: normal;\n    line-height: 1.5;\n    margin-bottom: 0;\n\n    -moz-tab-size: 4;\n    -o-tab-size: 4;\n    tab-size: 4;\n\n    -webkit-hyphens: none;\n    -moz-hyphens: none;\n    -ms-hyphens: none;\n    hyphens: none;\n  }\n\n  /* Code blocks */\n  pre[class*='language-'] {\n    overflow: auto;\n    padding: 1.3125rem;\n  }\n\n  pre[class*='language-']::-moz-selection {\n    /* Firefox */\n    background: hsl(207, 4%, 16%);\n  }\n\n  pre[class*='language-']::selection {\n    /* Safari */\n    background: hsl(207, 4%, 16%);\n  }\n\n  /* Text Selection colour */\n  pre[class*='language-']::-moz-selection,\n  pre[class*='language-'] ::-moz-selection {\n    text-shadow: none;\n    background: hsla(0, 0%, 100%, 0.15);\n  }\n\n  pre[class*='language-']::selection,\n  pre[class*='language-'] ::selection {\n    text-shadow: none;\n    background: hsla(0, 0%, 100%, 0.15);\n  }\n\n  /* Inline code */\n  :not(pre) > code[class*='language-'] {\n    border-radius: 0.3em;\n    background: var(--inlineCode-bg);\n    color: var(--inlineCode-text);\n    padding: 0.15em 0.2em 0.05em;\n    white-space: normal;\n  }\n\n  .token.attr-name {\n    color: rgb(173, 219, 103);\n    font-style: italic;\n  }\n\n  .token.comment {\n    color: rgb(128, 147, 147);\n  }\n\n  .token.string,\n  .token.url {\n    color: rgb(173, 219, 103);\n  }\n\n  .token.variable {\n    color: rgb(214, 222, 235);\n  }\n\n  .token.number {\n    color: rgb(247, 140, 108);\n  }\n\n  .token.builtin,\n  .token.char,\n  .token.constant,\n  .token.function {\n    color: rgb(130, 170, 255);\n  }\n\n  .token.punctuation {\n    color: rgb(199, 146, 234);\n  }\n\n  .token.selector,\n  .token.doctype {\n    color: rgb(199, 146, 234);\n    font-style: 'italic';\n  }\n\n  .token.class-name {\n    color: rgb(255, 203, 139);\n  }\n\n  .token.tag,\n  .token.operator,\n  .token.keyword {\n    color: #ffa7c4;\n  }\n\n  .token.boolean {\n    color: rgb(255, 88, 116);\n  }\n\n  .token.property {\n    color: rgb(128, 203, 196);\n  }\n\n  .token.namespace {\n    color: rgb(178, 204, 214);\n  }\n\n  pre[data-line] {\n    padding: 1em 0 1em 3em;\n    position: relative;\n  }\n\n  .gatsby-highlight-code-line {\n    background-color: hsla(207, 95%, 15%, 1);\n    display: block;\n    margin-right: -1.3125rem;\n    margin-left: -1.3125rem;\n    padding-right: 1em;\n    padding-left: 1.25em;\n    border-left: 0.25em solid #ffa7c4;\n  }\n\n  .gatsby-highlight {\n    margin-bottom: 1.75rem;\n    margin-left: -1.3125rem;\n    margin-right: -1.3125rem;\n    border-radius: 10px;\n    background: #011627;\n    -webkit-overflow-scrolling: touch;\n    overflow: auto;\n  }\n\n  @media (max-width: 672px) {\n    .gatsby-highlight {\n      border-radius: 0;\n    }\n  }\n\n  .gatsby-highlight pre[class*='language-'] {\n    float: left;\n    min-width: 100%;\n  }\n  /* End Syntax Highlighting */\n`;\n\nconst renderAst = new RehypeReact({\n  createElement: React.createElement,\n  // components: { 'interactive-counter': Counter },\n  components: {},\n}).Compiler;\n\nconst Ast = ({ ast, ...props }: any) => {\n  ast.properties = props;\n  return renderAst(ast);\n};\n\nexport interface PostContentProps {\n  htmlAst: any;\n}\n\nconst PostContent: React.FC<PostContentProps> = ({ htmlAst }) => {\n  return (\n    <PostFullContent className=\"post-full-content\">\n      {/* TODO: this will apply the class when rehype-react is published https://github.com/rhysd/rehype-react/pull/11 */}\n      <Ast className=\"post-content\" ast={htmlAst} />\n    </PostFullContent>\n  );\n};\n\nexport default PostContent;\n"],"sourceRoot":""}